name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  PROJECT_ID: ${{ secrets.G_PROJECT_ID }}
  IMAGE: ridgelist
  SERVICE: ridgelist-ci
  SERVICE_PROD: ridgelist-prodv2
  
jobs:
  

  build:
    environment: ci
    runs-on: ubuntu-latest
    steps:

    - name: Set up gcloud Cloud SDK environment
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: GCloud Docker auth
      run: gcloud auth configure-docker

    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file RidgeList.FrontEnd/Dockerfile --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Push the Docker image
      run: docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Deploy to cloud run
      run: gcloud run deploy ${{ env.SERVICE }} --image="gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" --platform=managed --region=europe-west2 --port=80 --allow-unauthenticated --set-env-vars=ASPNETCORE_ENVIRONMENT=ci


  #runCypress:
  #  environment: ci
  #  runs-on: ubuntu-latest
  #  needs: build
  #
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Checkout
  #      run: cd RidgeList.FrontEnd/ClientApp && npm install
  #    - name: Cypress.io
  #      uses: cypress-io/github-action@v2.7.0
  #      with:
  #        record: false
  #        config: baseUrl=https://ridgelist-ci-gfhqqojama-nw.a.run.app
  #        config-file: cypress.json
  #        browser: chrome
  #        install: true
  #        working-directory: RidgeList.FrontEnd/ClientApp
  #        headless: true
          
  playwright:
    runs-on: ubuntu-latest
    environment: ci
    needs: build

    steps:
      - name: setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - uses: actions/checkout@v2
      - name: Install dependencies and run tests
        run: dotnet test RidgeList.Playwright/RidgeList.Playwright.csproj -c Release
        env:
            ASPNETCORE_ENVIRONMENT: ci

  deployToProd:
    environment: ci
    runs-on: ubuntu-latest
    needs: playwright
    steps:

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Deploy to cloud run
        run: gcloud run deploy ${{ env.SERVICE_PROD }} --image="gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" --platform=managed --region=europe-west1 --port=80 --allow-unauthenticated --set-env-vars=ASPNETCORE_ENVIRONMENT=prod --no-traffic
