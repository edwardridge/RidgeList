[{"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js":"1","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx":"2","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx":"3","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx":"4","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx":"5","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx":"6","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts":"7","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx":"8","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts":"9","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx":"10","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Logout.tsx":"11","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useLogin.ts":"12","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistPersonRow.tsx":"13"},{"size":4013,"mtime":1609345184850,"results":"14","hashOfConfig":"15"},{"size":1063,"mtime":1610905123636,"results":"16","hashOfConfig":"15"},{"size":537,"mtime":1609609774645,"results":"17","hashOfConfig":"15"},{"size":355,"mtime":1609345184842,"results":"18","hashOfConfig":"15"},{"size":1540,"mtime":1610544692379,"results":"19","hashOfConfig":"15"},{"size":2808,"mtime":1610999280994,"results":"20","hashOfConfig":"15"},{"size":15518,"mtime":1611093109767,"results":"21","hashOfConfig":"15"},{"size":4487,"mtime":1611005289835,"results":"22","hashOfConfig":"15"},{"size":352,"mtime":1610299894310,"results":"23","hashOfConfig":"15"},{"size":1632,"mtime":1610904912003,"results":"24","hashOfConfig":"15"},{"size":262,"mtime":1610904925612,"results":"25","hashOfConfig":"15"},{"size":1294,"mtime":1610905080553,"results":"26","hashOfConfig":"15"},{"size":2597,"mtime":1611005219934,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16c9n8r",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js",[],["59","60","61"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx",[],["62","63","64"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx",[],["65","66","67"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx",["68","69","70"],"import React, {ChangeEvent, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {WishlistClient, WishlistSummaryModel} from \"../../nswag/api.generated\";\nimport { Link } from \"react-router-dom\";\nimport './WishlistSummary.css';\nimport { useGetLogin } from \"../useLogin\";\n\ninterface WishlishHomepageProps{\n    wishlistClient: WishlistClient;\n}\n\nexport const WishlistHomepage = (props : WishlishHomepageProps) => {\n    const [creating, setCreating] = useState(false);\n    const [nameOfNewWishlist, setNameOfNewWishlist] = useState(\"\");\n    const [wishlistSummaries, setWishlistSummaries] = useState([] as WishlistSummaryModel[]);\n    const history = useHistory();\n    const login = useGetLogin(false);\n    \n    useEffect(() => {\n        loadWishListSummaries(login.Email);\n    }, [wishlistSummaries.length]);\n\n    let onClickCancel = () => {\n        setCreating(false);\n        setNameOfNewWishlist(\"\");\n    }\n    \n    let onClickCreate = async () => {\n        let newWishlist = await props.wishlistClient.create(nameOfNewWishlist, login.Email, login.Name);\n        setCreating(false);\n        history.push(\"/wishlist/\" + newWishlist.id);\n    }\n\n    let handleInputChange = (event : ChangeEvent<HTMLInputElement>) => {\n        setNameOfNewWishlist(event.target.value);\n    }\n    \n    let loadWishListSummaries = async (email : string) => {\n        var summaries = await props.wishlistClient.getSummaries(email);\n        setWishlistSummaries(summaries);\n    }\n    \n    let onClickAddWishlist = () => {\n        setCreating(true);\n    }\n    \n    let createButtons;\n    if (!creating) {\n        createButtons = <a><div onClick={onClickAddWishlist} className='newItem wishlistSummaryItem' cypress-name='CreateNewWishlist'>...create new wishlist...</div></a>\n    }\n    else {\n        createButtons = <div className='newItem wishlistSummaryItem'>\n            <input type=\"text\" value={nameOfNewWishlist} onChange={handleInputChange} placeholder='Name of wishlist...' cypress-name='NameOfWishlist'></input> \n            <button onClick={onClickCreate} className='ml-2 btn btn-success' cypress-name='Create'>Create</button>\n            <button onClick={onClickCancel} className='ml-2 btn btn-dark' cypress-name='Cancel'>Cancel</button>\n        </div>\n    }\n\n    let summaries =\n        <div className='wishlistSummaries'>\n            {\n                wishlistSummaries.map(s =>\n                        <Link to={`wishlist/${s.id}`}> <div key={s.name} className='wishlistSummaryItem'>{s.name}</div></Link>)\n            }\n            <a>\n                {createButtons}\n            </a>\n        </div>\n\n    return (\n        <div>\n            <h2>Your Wishlists - {login.Name} <span className='emailDetails'>({login.Email})</span></h2>\n            { summaries }\n        </div>\n    );\n}","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx",["71","72"],"import React, { useState, useEffect } from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {WishlistClient, WishlistModel} from \"../../nswag/api.generated\";\nimport {IWishlistRepository} from \"./IWishlistRepository\";\nimport \"./WishlistSummary.css\";\nimport { useGetLogin } from \"../useLogin\";\nimport {WishlistPersonRow, OtherPersonWishlistRow} from \"./WishlistPersonRow\"\n\ninterface WishlistProps {\n    id: string;\n}\n\ninterface Props extends RouteComponentProps<WishlistProps> {\n\n    wishlistRepository : IWishlistRepository;\n}\n\n const Wishlist = (props : Props) => {\n     const [wishlist, setWishlist] = useState<WishlistModel|null>(null);\n     const [newPersonName, setNewPersonName] = useState(\"\");\n     const [newPersonEmail, setNewPersonEmail] = useState(\"\");    \n     const [addingNewPerson, setAddingNewPerson] = useState(false);\n     const login = useGetLogin(false);\n    \n     useEffect(() => {\n        let id = props.match.params.id;\n        props.wishlistRepository.getWishlist(id).then(s => { \n            setWishlist(s);\n            let numPeople = s?.people?.length ?? 0;\n            if(numPeople === 1)\n            {\n                setAddingNewPerson(true);\n            }\n        });\n         \n     }, [wishlist?.id]);\n    \n     let createNewPersonClick = async () => {\n        var newWishlist = await new WishlistClient().addPerson(wishlist?.id, newPersonEmail, newPersonName);\n        setWishlist(newWishlist);\n        setNewPersonName(\"\");\n        setNewPersonEmail(\"\");\n    }\n    \n    let createButonIsDisabled = () => {\n        return (wishlist?.people?.map(s => s.email).indexOf(newPersonEmail) ?? 0) > -1;\n    }\n\n    if (wishlist) {\n        let addNewPersonDetails = (\n            <>\n                <input type=\"text\"\n                       cypress-name=\"NewPersonName\"\n                       onChange={(event) => setNewPersonName(event.target.value)}\n                       value={newPersonName}\n                       placeholder=\"Name...\"\n                       className='form-control col-4'></input>\n                <input type=\"text\"\n                       cypress-name=\"NewPersonEmail\"\n                       onChange={(event) => setNewPersonEmail(event.target.value)}\n                       value={newPersonEmail}\n                       placeholder=\"Email Address...\"\n                       className='form-control col-5'></input>\n                <span className='col-2'><button cypress-name=\"CreateNewPerson\" onClick={createNewPersonClick} disabled={createButonIsDisabled()} className='btn btn-success'>Add New Person</button></span>\n                <span className='col-1'><button cypress-name=\"CancelNewPerson\" onClick={() => { setAddingNewPerson(false); setNewPersonName(\"\") }} className='btn btn-dark'>Cancel</button></span>\n            </>\n        )\n        \n        let loggedInWishlist = wishlist.people?.find(s => s.email === login.Email);\n        let otherPeople = wishlist.people?.filter(s => s.email !== login.Email);\n        \n        let addNewRow = <div className='w-100' cypress-name=\"AddNewPerson\" onClick={()=> setAddingNewPerson(true)}>+</div>\n        \n        let createNewPerson = (\n            <a>\n                <div className='newItem wishlistSummaryItem form-row'>\n                    {addingNewPerson ? addNewPersonDetails : addNewRow}\n                </div>\n            </a>\n        )\n        \n        let listOfOtherPeoplesIdeas = (\n            \n            <div className='wishlistSummaries' cypress-name=\"ListOfPeople\">\n                {\n                    otherPeople?.map((s) => \n                        <OtherPersonWishlistRow key={s.email} wishlistPerson={s} wishlistId={wishlist?.id} setWishlist={setWishlist}></OtherPersonWishlistRow> )\n                }\n                {createNewPerson}\n            </div>)\n        \n        return (\n            <div>\n                <h1 id=\"wishlistTitle\">Wishlist - {wishlist.name}</h1>\n                <div>\n                    <h4>Your items - {loggedInWishlist?.name}</h4>\n                    <WishlistPersonRow wishlistPerson={loggedInWishlist ?? {}} wishlistId={wishlist.id} setWishlist={setWishlist} loginDetails={login}></WishlistPersonRow>\n                </div>\n                <div className='mt-lg-5'>\n                    <h4>Everyone else</h4>\n                    {listOfOtherPeoplesIdeas}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div>Loading...</div>\n    );\n}\n\nexport default withRouter(Wishlist);","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Logout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useLogin.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistPersonRow.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","replacedBy":"81"},{"ruleId":"77","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":21,"column":8,"nodeType":"85","endLine":21,"endColumn":34,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":49,"column":25,"nodeType":"89","endLine":49,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":65,"column":13,"nodeType":"89","endLine":65,"endColumn":16},{"ruleId":"83","severity":1,"message":"90","line":36,"column":9,"nodeType":"85","endLine":36,"endColumn":23,"suggestions":"91"},{"ruleId":"87","severity":1,"message":"88","line":75,"column":13,"nodeType":"89","endLine":75,"endColumn":16},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"jsx-a11y/accessible-emoji",[],[],["92"],["93"],[],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadWishListSummaries' and 'login.Email'. Either include them or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [loadWishListSummaries, login.Email, wishlistSummaries.length]",{"range":"100","text":"101"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"102","text":"103"},[814,840],"[loadWishListSummaries, login.Email, wishlistSummaries.length]",[1249,1263],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]