[{"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\index.tsx":"1","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\registerServiceWorker.js":"2","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\App.tsx":"3","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\nswag\\api.generated.ts":"4","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\IWishlistRepository.ts":"5","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Layout.tsx":"6","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistHomepage.tsx":"7","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\Wishlist.tsx":"8","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Logout.tsx":"9","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Login.tsx":"10","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useLogin.ts":"11","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\NavMenu.tsx":"12","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\OtherPersonWishlistRow.tsx":"13","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistPersonRow.tsx":"14"},{"size":555,"mtime":1610113556479,"results":"15","hashOfConfig":"16"},{"size":4121,"mtime":1610113556480,"results":"17","hashOfConfig":"16"},{"size":1093,"mtime":1611609766838,"results":"18","hashOfConfig":"16"},{"size":21506,"mtime":1611609767032,"results":"19","hashOfConfig":"16"},{"size":363,"mtime":1611609766882,"results":"20","hashOfConfig":"16"},{"size":373,"mtime":1610113556477,"results":"21","hashOfConfig":"16"},{"size":3163,"mtime":1611655737993,"results":"22","hashOfConfig":"16"},{"size":5988,"mtime":1611660917657,"results":"23","hashOfConfig":"16"},{"size":273,"mtime":1611609766869,"results":"24","hashOfConfig":"16"},{"size":1668,"mtime":1611609766852,"results":"25","hashOfConfig":"16"},{"size":1341,"mtime":1611609767004,"results":"26","hashOfConfig":"16"},{"size":1594,"mtime":1611609766871,"results":"27","hashOfConfig":"16"},{"size":2502,"mtime":1611661465894,"results":"28","hashOfConfig":"16"},{"size":3467,"mtime":1611661393287,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"90n24z",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\index.tsx",[],["61","62","63"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\registerServiceWorker.js",[],["64","65","66"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\App.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\nswag\\api.generated.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\IWishlistRepository.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Layout.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistHomepage.tsx",["67","68","69","70"],"import React, {ChangeEvent, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {WishlistClient, WishlistSummaryModel} from \"../../nswag/api.generated\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './WishlistSummary.css';\r\nimport { useGetLogin } from \"../useLogin\";\r\nimport { Modal, ModalDialog, Button } from \"react-bootstrap\"\r\n\r\ninterface WishlishHomepageProps{\r\n    wishlistClient: WishlistClient;\r\n}\r\n\r\nexport const WishlistHomepage = (props : WishlishHomepageProps) => {\r\n    const [creating, setCreating] = useState(false);\r\n    const [nameOfNewWishlist, setNameOfNewWishlist] = useState(\"\");\r\n    const [wishlistSummaries, setWishlistSummaries] = useState([] as WishlistSummaryModel[]);\r\n    const history = useHistory();\r\n    const login = useGetLogin(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadWishListSummaries(login.Email);\r\n    }, [wishlistSummaries.length]);\r\n\r\n    let onClickCancel = () => {\r\n        setNameOfNewWishlist(\"\");\r\n        setShow(false);\r\n    }\r\n    \r\n    let onClickCreate = async () => {\r\n        let newWishlist = await props.wishlistClient.create(nameOfNewWishlist, login.Email, login.Name);\r\n        setCreating(false);\r\n        history.push(\"/wishlist/\" + newWishlist.id);\r\n        setShow(false);\r\n    }\r\n\r\n    let handleInputChange = (event : ChangeEvent<HTMLInputElement>) => {\r\n        setNameOfNewWishlist(event.target.value);\r\n    }\r\n    \r\n    let loadWishListSummaries = async (email : string) => {\r\n        var summaries = await props.wishlistClient.getSummaries(email);\r\n        setWishlistSummaries(summaries);\r\n    }\r\n    \r\n    let onClickAddWishlist = () => {\r\n        setShow(true);\r\n    }\r\n    \r\n    let createButtons = <>\r\n        <Button variant=\"primary\" onClick={onClickAddWishlist}>\r\n            Create New...\r\n        </Button>\r\n\r\n        <Modal show={show} onHide={onClickCancel}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Create New Wishlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <input type=\"text\" className='w-100' value={nameOfNewWishlist} onChange={handleInputChange} placeholder='Name of wishlist...' cypress-name='NameOfWishlist'></input>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onClickCancel}>\r\n                    Close\r\n          </Button>\r\n                <Button variant=\"primary\" onClick={onClickCreate}>\r\n                    Create\r\n          </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n\r\n    let summaries =\r\n        <div className='wishlistSummaries'>\r\n            {\r\n                wishlistSummaries.map(s =>\r\n                    <Link key={s.name} to={`wishlist/${s.id}`}> <div key={s.name} className='wishlistSummaryItem'>{s.name}</div></Link>)\r\n            }\r\n            <a>\r\n                \r\n            </a>\r\n        </div>\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Wishlists</h2>\r\n\r\n            <div>\r\n                {createButtons}\r\n            </div>\r\n            { summaries }\r\n        </div>\r\n    );\r\n}","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\Wishlist.tsx",["71"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Logout.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useLogin.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\NavMenu.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\OtherPersonWishlistRow.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistPersonRow.tsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":7,"column":17,"nodeType":"81","messageId":"82","endLine":7,"endColumn":28},{"ruleId":"79","severity":1,"message":"83","line":14,"column":12,"nodeType":"81","messageId":"82","endLine":14,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":23,"column":8,"nodeType":"86","endLine":23,"endColumn":34,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":79,"column":13,"nodeType":"90","endLine":79,"endColumn":16},{"ruleId":"84","severity":1,"message":"91","line":32,"column":9,"nodeType":"86","endLine":32,"endColumn":23,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'ModalDialog' is defined but never used.","Identifier","unusedVar","'creating' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadWishListSummaries' and 'login.Email'. Either include them or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [loadWishListSummaries, login.Email, wishlistSummaries.length]",{"range":"101","text":"102"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"103","text":"104"},[938,964],"[loadWishListSummaries, login.Email, wishlistSummaries.length]",[1216,1230],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]