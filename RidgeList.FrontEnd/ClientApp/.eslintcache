[{"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js":"1","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx":"2","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/HelloWorld.tsx":"3","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx":"4","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Counter.tsx":"5","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx":"6","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/FetchData.tsx":"7","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx":"8","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx":"9","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts":"10","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx":"11","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts":"12","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx":"13"},{"size":4013,"mtime":1609345184850,"results":"14","hashOfConfig":"15"},{"size":1290,"mtime":1610406750341,"results":"16","hashOfConfig":"15"},{"size":1720,"mtime":1609594894039,"results":"17","hashOfConfig":"15"},{"size":537,"mtime":1609609774645,"results":"18","hashOfConfig":"15"},{"size":791,"mtime":1609609356741,"results":"19","hashOfConfig":"15"},{"size":355,"mtime":1609345184842,"results":"20","hashOfConfig":"15"},{"size":1565,"mtime":1609610983477,"results":"21","hashOfConfig":"15"},{"size":1383,"mtime":1609633918480,"results":"22","hashOfConfig":"15"},{"size":2818,"mtime":1610406995665,"results":"23","hashOfConfig":"15"},{"size":14557,"mtime":1610404388251,"results":"24","hashOfConfig":"15"},{"size":3206,"mtime":1610361409947,"results":"25","hashOfConfig":"15"},{"size":352,"mtime":1610299894310,"results":"26","hashOfConfig":"15"},{"size":800,"mtime":1610407064778,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16c9n8r",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js",[],["58","59","60"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/HelloWorld.tsx",[],["61","62","63"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Counter.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/FetchData.tsx",["64"],"import React, { Component } from 'react';\nimport { WeatherForecastClient, WeatherForecast } from '../nswag/api.generated';\n\nexport class FetchData extends React.Component<any, any> {\n  static displayName = FetchData.name;\n\n  constructor(props : any) {\n    super(props);\n    this.state = { forecasts: [], loading: true };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n\n  static renderForecastsTable(forecasts : WeatherForecast[]) {\n    return (\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Temp. (C)</th>\n            <th>Temp. (F)</th>\n            <th>Summary</th>\n          </tr>\n        </thead>\n        <tbody>\n          {forecasts.map(forecast =>\n            <tr key={forecast.date.toString()}>\n              <td>{forecast.date}</td>\n              <td>{forecast.temperatureC}</td>\n              <td>{forecast.temperatureF}</td>\n              <td>{forecast.summary}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    let contents = this.state.loading\n      ? <p><em>Loading...</em></p>\n      : FetchData.renderForecastsTable(this.state.forecasts);\n\n    return (\n      <div>\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\n        <p>This component demonstrates fetching data from the server.</p>\n        {contents}\n      </div>\n    );\n  }\n\n  async populateWeatherData() {\n    const data = await new WeatherForecastClient().get();\n    this.setState({ forecasts: data, loading: false });\n  }\n}\n","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx",["65","66","67","68"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx",["69","70"],"import React, { useState, useEffect } from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {WishlistClient, WishlistModel} from \"../../nswag/api.generated\";\nimport {IWishlistRepository} from \"./IWishlistRepository\";\nimport \"./WishlistSummary.css\"\n\ninterface WishlistProps {\n    id: string;\n}\n\ninterface Props extends RouteComponentProps<WishlistProps> {\n\n    wishlistRepository : IWishlistRepository;\n}\n\n const Wishlist : React.FC<Props> = (props) => {\n    const [wishlist, setWishlist] = useState<WishlistModel|null>(null);\n    const [newPersonName, setNewPersonName] = useState(\"\");    \n    const [addingNewPerson, setAddingNewPerson] = useState(false);\n    \n     useEffect(() => {\n        let id = props.match.params.id;\n        props.wishlistRepository.getWishlist(id).then(s => { \n            setWishlist(s);\n            let numPeople = s?.people?.length ?? 0;\n            if(numPeople === 0)\n            {\n                setAddingNewPerson(true);\n            }\n        });\n         \n     }, [wishlist?.id]);\n    \n     let createNewPersonClick = async () => {\n        var newWishlist = await new WishlistClient().addPerson(wishlist?.id, newPersonName);\n        setWishlist(newWishlist);\n        setNewPersonName(\"\");\n    }\n    \n    let createButonIsDisabled = () => {\n        return (wishlist?.people?.indexOf(newPersonName) ?? 0) > -1;\n    }\n\n    if (wishlist) {\n        let addNewPersonDetails = (\n            <>\n                <input type=\"text\"\n                       cypress-name=\"NewPersonName\"\n                       onChange={(event) => setNewPersonName(event.target.value)}\n                       value={newPersonName}\n                       placeholder=\"Add a new email address...\"\n                       className='form-control col-9'></input>\n                <span className='col-2'><button cypress-name=\"CreateNewPerson\" onClick={createNewPersonClick} disabled={createButonIsDisabled()} className='btn btn-success'>Add New Person</button></span>\n                <span className='col-1'><button cypress-name=\"CancelNewPerson\" onClick={() => { setAddingNewPerson(false); setNewPersonName(\"\") }} className='btn btn-dark'>Cancel</button></span>\n            </>\n        )\n        \n        let addNewRow = <div className='w-100' onClick={()=> setAddingNewPerson(true)}>+</div>\n        \n        let createNewPerson = (\n            <a>\n                <div className='newItem wishlistSummaryItem form-row'>\n                    {addingNewPerson ? addNewPersonDetails : addNewRow}\n                </div>\n            </a>\n        )\n        \n        let listOfPeople = (\n            <div className='wishlistSummaries' cypress-name=\"ListOfPeople\"> \n                {\n                    wishlist.people?.map((s,i) => <div className='wishlistSummaryItem' key={`${s}${i}`}>{s}</div>)\n                }\n                {createNewPerson}\n            </div>)\n        \n        return (\n            <div>\n                <h1 id=\"wishlistTitle\">Wishlist - {wishlist.name}</h1>\n                {/*{createNewPerson}*/}\n                {listOfPeople}\n            </div>\n        )\n    }\n\n    return (\n        <div>Loading...</div>\n    );\n}\n\nexport default withRouter(Wishlist);","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"82","line":3,"column":25,"nodeType":"80","messageId":"81","endLine":3,"endColumn":38},{"ruleId":"78","severity":1,"message":"83","line":4,"column":16,"nodeType":"80","messageId":"81","endLine":4,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":21,"column":8,"nodeType":"86","endLine":21,"endColumn":34,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":69,"column":13,"nodeType":"90","endLine":69,"endColumn":16},{"ruleId":"84","severity":1,"message":"91","line":32,"column":9,"nodeType":"86","endLine":32,"endColumn":23,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":61,"column":13,"nodeType":"90","endLine":61,"endColumn":16},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'WishlistModel' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadWishListSummaries'. Either include it or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [loadWishListSummaries, wishlistSummaries.length]",{"range":"101","text":"102"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"103","text":"104"},[841,867],"[loadWishListSummaries, wishlistSummaries.length]",[1032,1046],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]