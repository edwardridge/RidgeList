[{"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\index.tsx":"1","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\registerServiceWorker.js":"2","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\App.tsx":"3","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\IWishlistRepository.ts":"4","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Layout.tsx":"5","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Logout.tsx":"6","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\nswag\\api.generated.ts":"7","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\Wishlist.tsx":"8","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Login.tsx":"9","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistHomepage.tsx":"10","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useLogin.ts":"11","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\NavMenu.tsx":"12","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\useWishlistClient.tsx":"13","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\OtherPersonWishlistRow.tsx":"14","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistPersonRow.tsx":"15","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useMaterialStyles.ts":"16"},{"size":555,"mtime":1610113556479,"results":"17","hashOfConfig":"18"},{"size":4121,"mtime":1610113556480,"results":"19","hashOfConfig":"18"},{"size":1327,"mtime":1612385565893,"results":"20","hashOfConfig":"18"},{"size":363,"mtime":1611609766882,"results":"21","hashOfConfig":"18"},{"size":373,"mtime":1610113556477,"results":"22","hashOfConfig":"18"},{"size":273,"mtime":1611609766869,"results":"23","hashOfConfig":"18"},{"size":26623,"mtime":1612459577238,"results":"24","hashOfConfig":"18"},{"size":8347,"mtime":1612453524563,"results":"25","hashOfConfig":"18"},{"size":2778,"mtime":1612458082759,"results":"26","hashOfConfig":"18"},{"size":4103,"mtime":1612453553396,"results":"27","hashOfConfig":"18"},{"size":1440,"mtime":1612453048654,"results":"28","hashOfConfig":"18"},{"size":1594,"mtime":1611609766871,"results":"29","hashOfConfig":"18"},{"size":138,"mtime":1611755726061,"results":"30","hashOfConfig":"18"},{"size":3285,"mtime":1612453497515,"results":"31","hashOfConfig":"18"},{"size":4071,"mtime":1612453572211,"results":"32","hashOfConfig":"18"},{"size":741,"mtime":1612384493170,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"90n24z",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\index.tsx",[],["71","72","73"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\registerServiceWorker.js",[],["74","75","76"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\App.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\IWishlistRepository.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Layout.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Logout.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\nswag\\api.generated.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\Wishlist.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Login.tsx",["77"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetLogin, useGetLogin } from \"../useLogin\";\r\nimport { useMaterialStyles } from \"../useMaterialStyles\";\r\nimport \"./Login.css\"\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const Login : React.FC<any> = (props) => {\r\n    const [loginEmail, setLoginEmail] = useState(\"\");    \r\n    const [loginName, setLoginName] = useState(\"\");\r\n    const history = useHistory();\r\n    const getLogin = useGetLogin(true);\r\n    const setLogin = useSetLogin();\r\n    const classes = useMaterialStyles();\r\n    \r\n    useEffect(() => {\r\n       if(getLogin.IsLoggedIn) {\r\n            history.push('/wishlists');\r\n        }\r\n    });\r\n    \r\n    const loginClicked = async () => {\r\n        await setLogin(loginEmail);\r\n        history.push('/wishlists');\r\n    }\r\n     \r\n    return (\r\n        <>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\r\n                    Welcome to RidgeList!\r\n                </Typography>\r\n                <div className={classes.form}>\r\n                    <TextField\r\n                        autoFocus\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"EmailLogin\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        id=\"EmailLogin\"\r\n                        cypress-name=\"EmailLogin\"\r\n                        autoComplete=\"email\"\r\n                        onChange={(e) => setLoginName(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"NameLogin\"\r\n                        label=\"Email Address\"\r\n                        name=\"NameLogin\"\r\n                        onChange={(e) => setLoginEmail(e.target.value)}\r\n                        cypress-name=\"NameLogin\"\r\n                        \r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        cypress-name='LoginButton'\r\n                        onClick={loginClicked}\r\n                    >\r\n                        Enter\r\n          </Button>\r\n                </div>\r\n            </div>\r\n        </>)\r\n}","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistHomepage.tsx",["78"],"import React, {ChangeEvent, useState, useEffect, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {WishlistClient, WishlistSummaryModel} from \"../../nswag/api.generated\";\r\nimport './WishlistSummary.css';\r\nimport { useGetLogin } from \"../useLogin\";\r\nimport { useMaterialStyles } from \"../useMaterialStyles\";\r\nimport { Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, Grid, List, ListItem, ListItemText, Paper, TextField, Typography } from \"@material-ui/core\";\r\n\r\ninterface WishlishHomepageProps{\r\n    wishlistClient: WishlistClient;\r\n}\r\n\r\nexport const WishlistHomepage = (props : WishlishHomepageProps) => {\r\n    const [nameOfNewWishlist, setNameOfNewWishlist] = useState(\"\");\r\n    const [creatorIsGiftee, setCreatorIsGiftee] = useState(true);\r\n    const [wishlistSummaries, setWishlistSummaries] = useState([] as WishlistSummaryModel[]);\r\n    const history = useHistory();\r\n    const login = useGetLogin(false);\r\n    const [show, setShow] = useState(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const classes = useMaterialStyles();\r\n\r\n    useEffect(() => {\r\n        loadWishListSummaries(login.UserId);\r\n    }, [wishlistSummaries.length, login.UserId]);\r\n\r\n    let onClickCancel = () => {\r\n        setNameOfNewWishlist(\"\");\r\n        setShow(false);\r\n    }\r\n    \r\n    let onClickCreate = async () => {\r\n        let newWishlist = await props.wishlistClient.create(nameOfNewWishlist, login.UserId, creatorIsGiftee);\r\n        history.push(\"/wishlist/\" + newWishlist.id);\r\n        setShow(false);\r\n    }\r\n\r\n    let handleInputChange = (event : ChangeEvent<HTMLInputElement>) => {\r\n        setNameOfNewWishlist(event.target.value);\r\n    }\r\n    \r\n    let loadWishListSummaries = async (email : string) => {\r\n        var summaries = await props.wishlistClient.getSummaries(email);\r\n        setWishlistSummaries(summaries);\r\n    }\r\n    \r\n    let onClickAddWishlist = () => {\r\n        setShow(true);\r\n        setTimeout(() => {inputRef?.current?.focus();},0);\r\n    }\r\n    \r\n    let createButtons = <>\r\n        <Button fullWidth variant=\"contained\" cypress-name='CreateNewWishlist' onClick={onClickAddWishlist}>\r\n            Create New...\r\n        </Button>\r\n\r\n        <Dialog open={show} onClose={onClickCancel}>\r\n\r\n            <DialogTitle>Create New Wishlist</DialogTitle>\r\n            <DialogContent>\r\n                <TextField autoFocus margin=\"dense\" value={nameOfNewWishlist} onChange={handleInputChange} label='Name of wishlist...' cypress-name='NameOfWishlist' fullWidth></TextField>\r\n                <FormControlLabel control={<Checkbox checked={creatorIsGiftee} onChange={(e) => { setCreatorIsGiftee(e.target.checked) }} name=\"areTheyGiftee\" color=\"primary\" />} label=\"Are you receiving gifts?\" />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"primary\" cypress-name='Create' onClick={onClickCreate}>\r\n                    Create\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={onClickCancel}>\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </>\r\n\r\n    let summaries =\r\n        <Paper >\r\n            <List component=\"nav\">\r\n                {\r\n                    wishlistSummaries.map(s =>\r\n                        <ListItem divider key={s.name} onClick={() => history.push(`/wishlist/${s.id}`)} button><ListItemText primary={s.name} /></ListItem>)\r\n                }\r\n            </List>\r\n        </Paper>\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"h1\" variant=\"h5\" color=\"primary\" align=\"center\">\r\n                        Your Wishlists\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    { summaries }\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {createButtons}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useLogin.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\NavMenu.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\useWishlistClient.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\OtherPersonWishlistRow.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistPersonRow.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useMaterialStyles.ts",["79"],"﻿import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useMaterialStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 720,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":12,"nodeType":"89","messageId":"90","endLine":12,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":25,"column":8,"nodeType":"93","endLine":25,"endColumn":48,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'loginName' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadWishListSummaries'. Either include it or remove the dependency array.","ArrayExpression",["102"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"103","text":"104"},"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},[-1,0],"","Update the dependencies array to be: [wishlistSummaries.length, login.UserId, loadWishListSummaries]",{"range":"107","text":"108"},[1200,1240],"[wishlistSummaries.length, login.UserId, loadWishListSummaries]"]