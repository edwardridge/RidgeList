[{"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\index.tsx":"1","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\registerServiceWorker.js":"2","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\App.tsx":"3","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\nswag\\api.generated.ts":"4","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\IWishlistRepository.ts":"5","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Layout.tsx":"6","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistHomepage.tsx":"7","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\Wishlist.tsx":"8","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Logout.tsx":"9","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Login.tsx":"10","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useLogin.ts":"11","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\NavMenu.tsx":"12","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\OtherPersonWishlistRow.tsx":"13","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistPersonRow.tsx":"14"},{"size":555,"mtime":1610113556479,"results":"15","hashOfConfig":"16"},{"size":4121,"mtime":1610113556480,"results":"17","hashOfConfig":"16"},{"size":1093,"mtime":1611609766838,"results":"18","hashOfConfig":"16"},{"size":21506,"mtime":1611609767032,"results":"19","hashOfConfig":"16"},{"size":363,"mtime":1611609766882,"results":"20","hashOfConfig":"16"},{"size":373,"mtime":1610113556477,"results":"21","hashOfConfig":"16"},{"size":4421,"mtime":1611615099883,"results":"22","hashOfConfig":"16"},{"size":4815,"mtime":1611609766932,"results":"23","hashOfConfig":"16"},{"size":273,"mtime":1611609766869,"results":"24","hashOfConfig":"16"},{"size":1668,"mtime":1611609766852,"results":"25","hashOfConfig":"16"},{"size":1341,"mtime":1611609767004,"results":"26","hashOfConfig":"16"},{"size":1594,"mtime":1611609766871,"results":"27","hashOfConfig":"16"},{"size":2296,"mtime":1611609766894,"results":"28","hashOfConfig":"16"},{"size":3137,"mtime":1611615520940,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"90n24z",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\index.tsx",[],["61","62","63"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\registerServiceWorker.js",[],["64","65","66"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\App.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\nswag\\api.generated.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\IWishlistRepository.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Layout.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistHomepage.tsx",["67","68","69","70"],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\Wishlist.tsx",["71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {WishlistClient, WishlistModel} from \"../../nswag/api.generated\";\r\nimport {IWishlistRepository} from \"./IWishlistRepository\";\r\nimport \"./WishlistSummary.css\";\r\nimport { useGetLogin } from \"../useLogin\";\r\nimport {WishlistPersonRow} from \"./WishlistPersonRow\";\r\nimport {OtherPersonWishlistRow} from \"./OtherPersonWishlistRow\";\r\n\r\ninterface WishlistProps {\r\n    id: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<WishlistProps> {\r\n    wishlistRepository : IWishlistRepository;\r\n}\r\n\r\n const Wishlist = (props : Props) => {\r\n     const [wishlist, setWishlist] = useState<WishlistModel|null>(null);\r\n     const [newPersonName, setNewPersonName] = useState(\"\");\r\n     const [newPersonEmail, setNewPersonEmail] = useState(\"\");    \r\n     const [addingNewPerson, setAddingNewPerson] = useState(false);\r\n     const login = useGetLogin(false);\r\n    \r\n     useEffect(() => {\r\n        let id = props.match.params.id;\r\n        props.wishlistRepository.getWishlist(id).then(s => { \r\n            setWishlist(s);\r\n            let numPeople = s?.people?.length ?? 0;\r\n            if(numPeople === 1)\r\n            {\r\n                setAddingNewPerson(true);\r\n            }\r\n        });\r\n         \r\n     }, [wishlist?.id]);\r\n    \r\n     let createNewPersonClick = async () => {\r\n        var newWishlist = await new WishlistClient().addPerson(wishlist?.id, newPersonEmail, newPersonName);\r\n        setWishlist(newWishlist);\r\n        setNewPersonName(\"\");\r\n        setNewPersonEmail(\"\");\r\n    }\r\n    \r\n    let createButonIsDisabled = () => {\r\n        return (wishlist?.people?.map(s => s.email).indexOf(newPersonEmail) ?? 0) > -1;\r\n    }\r\n\r\n    if (wishlist) {\r\n        let addNewPersonDetails = (\r\n            <>\r\n                <input type=\"text\"\r\n                       cypress-name=\"NewPersonName\"\r\n                       onChange={(event) => setNewPersonName(event.target.value)}\r\n                       value={newPersonName}\r\n                       placeholder=\"Name...\"\r\n                       className='form-control col-4'></input>\r\n                <input type=\"text\"\r\n                       cypress-name=\"NewPersonEmail\"\r\n                       onChange={(event) => setNewPersonEmail(event.target.value)}\r\n                       value={newPersonEmail}\r\n                       placeholder=\"Email Address...\"\r\n                       className='form-control col-5'></input>\r\n                <span className='col-2'><button cypress-name=\"CreateNewPerson\" onClick={createNewPersonClick} disabled={createButonIsDisabled()} className='btn btn-success'>Add New Person</button></span>\r\n                <span className='col-1'><button cypress-name=\"CancelNewPerson\" onClick={() => { setAddingNewPerson(false); setNewPersonName(\"\") }} className='btn btn-dark'>Cancel</button></span>\r\n            </>\r\n        )\r\n        \r\n        let loggedInWishlist = wishlist.people?.find(s => s.email === login.Email);\r\n        let otherPeople = wishlist.people?.filter(s => s.email !== login.Email);\r\n        \r\n        let addNewRow = <div className='w-100' cypress-name=\"AddNewPerson\" onClick={()=> setAddingNewPerson(true)}>+</div>\r\n        \r\n        let createNewPerson = (\r\n            <a>\r\n                <div className='newItem wishlistSummaryItem form-row'>\r\n                    {addingNewPerson ? addNewPersonDetails : addNewRow}\r\n                </div>\r\n            </a>\r\n        )\r\n        \r\n        let listOfOtherPeoplesIdeas = (\r\n            \r\n            <div className='wishlistSummaries' cypress-name=\"ListOfPeople\">\r\n                {\r\n                    otherPeople?.map((s) => \r\n                        <OtherPersonWishlistRow \r\n                            key={s.email} \r\n                            wishlistPerson={s} \r\n                            wishlistId={wishlist?.id} \r\n                            loggedInEmail={login.Email}\r\n                            setWishlist={setWishlist}></OtherPersonWishlistRow> )\r\n                }\r\n                {createNewPerson}\r\n            </div>)\r\n        \r\n        return (\r\n            <div>\r\n                <h1 id=\"wishlistTitle\">Wishlist - {wishlist.name}</h1>\r\n                <div>\r\n                    <h4>What would you like?</h4>\r\n                    <WishlistPersonRow wishlistPerson={loggedInWishlist ?? {}} wishlistId={wishlist.id} setWishlist={setWishlist} loginDetails={login}></WishlistPersonRow>\r\n                </div>\r\n                <div className='mt-lg-5'>\r\n                    <h4>What everyone else would like</h4>\r\n                    {listOfOtherPeoplesIdeas}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>Loading...</div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Wishlist);","C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Logout.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\useLogin.ts",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\NavMenu.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\OtherPersonWishlistRow.tsx",[],"C:\\Users\\edwar\\Documents\\GitHub\\RidgeList\\RidgeList.FrontEnd\\ClientApp\\src\\components\\Wishlist\\WishlistPersonRow.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":17,"nodeType":"82","messageId":"83","endLine":7,"endColumn":28},{"ruleId":"80","severity":1,"message":"84","line":14,"column":12,"nodeType":"82","messageId":"83","endLine":14,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":23,"column":8,"nodeType":"87","endLine":23,"endColumn":34,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":99,"column":13,"nodeType":"91","endLine":99,"endColumn":16},{"ruleId":"85","severity":1,"message":"92","line":36,"column":9,"nodeType":"87","endLine":36,"endColumn":23,"suggestions":"93"},{"ruleId":"89","severity":1,"message":"90","line":75,"column":13,"nodeType":"91","endLine":75,"endColumn":16},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'ModalDialog' is defined but never used.","Identifier","unusedVar","'creating' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadWishListSummaries' and 'login.Email'. Either include them or remove the dependency array.","ArrayExpression",["96"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [loadWishListSummaries, login.Email, wishlistSummaries.length]",{"range":"102","text":"103"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"104","text":"105"},[938,964],"[loadWishListSummaries, login.Email, wishlistSummaries.length]",[1325,1339],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]