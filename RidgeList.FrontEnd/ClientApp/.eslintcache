[{"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx":"1","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js":"2","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx":"3","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts":"4","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts":"5","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx":"6","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx":"7","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx":"8","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Logout.tsx":"9","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx":"10","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useLogin.ts":"11","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx":"12","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/useWishlistClient.tsx":"13","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/OtherPersonWishlistRow.tsx":"14","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistPersonRow.tsx":"15"},{"size":537,"mtime":1609609774645,"results":"16","hashOfConfig":"17"},{"size":4013,"mtime":1609345184850,"results":"18","hashOfConfig":"17"},{"size":1063,"mtime":1610905123636,"results":"19","hashOfConfig":"17"},{"size":22430,"mtime":1612043799470,"results":"20","hashOfConfig":"17"},{"size":352,"mtime":1610299894310,"results":"21","hashOfConfig":"17"},{"size":355,"mtime":1609345184842,"results":"22","hashOfConfig":"17"},{"size":3984,"mtime":1612095247076,"results":"23","hashOfConfig":"17"},{"size":7289,"mtime":1612095514396,"results":"24","hashOfConfig":"17"},{"size":262,"mtime":1610904925612,"results":"25","hashOfConfig":"17"},{"size":1675,"mtime":1612095680849,"results":"26","hashOfConfig":"17"},{"size":1294,"mtime":1610905080553,"results":"27","hashOfConfig":"17"},{"size":1540,"mtime":1610544692379,"results":"28","hashOfConfig":"17"},{"size":134,"mtime":1611733504315,"results":"29","hashOfConfig":"17"},{"size":2889,"mtime":1612043832704,"results":"30","hashOfConfig":"17"},{"size":3930,"mtime":1612095320310,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16c9n8r",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx",[],["65","66","67"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js",[],["68","69","70"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx",["71","72","73","74"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx",["75","76","77","78","79"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Logout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useLogin.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/useWishlistClient.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/OtherPersonWishlistRow.tsx",["80"],"import {WishlistClient, WishlistModel, WishlistPersonModel} from \"../../nswag/api.generated\";\nimport React from \"react\";\nimport {useWishlistClient} from \"./useWishlistClient\";\nimport Linkify from \"react-linkify\";\n\ninterface OtherPersonWishlistRowProps{\n    wishlistPerson : WishlistPersonModel;\n    loggedInEmail : string;\n    wishlistId: string;\n    setWishlist: (wishlist : WishlistModel) => void;\n}\n\nexport const OtherPersonWishlistRow = (props : OtherPersonWishlistRowProps) => {\n    let wishlistClient = useWishlistClient();\n    \n    let claimPresentClick = async (presentId : string) => {\n        let wishlist = await wishlistClient\n            .claimGift(props.wishlistId, props.loggedInEmail, presentId);\n        props.setWishlist(wishlist);\n    }\n\n    let unclaimPresentClick = async (presentId : string) => {\n        let wishlist = await wishlistClient\n            .unclaimGift(props.wishlistId, presentId);\n        props.setWishlist(wishlist);\n    }\n    let getPresentIdeas = () => {\n        if(props.wishlistPerson.presentIdeas?.length === 0){\n            return <div className='lightGrey text-center'>They haven't added any gift ideas yet!</div>\n        }\n        return props.wishlistPerson.presentIdeas?.map(s => {\n            let claimed = s.claimerEmail !== null && s.claimerEmail !== '';\n            let claimedByYou = s.claimerEmail === props.loggedInEmail;\n            let unclaim = claimedByYou ? <button className='btn btn-outline-danger w-100'\n                                                 onClick={() => unclaimPresentClick(s.id)}>Unclaim</button> : null;\n            let claimerText = claimed ? `- claimed by ${claimedByYou ? \"you\" : s.claimerName}` : '';\n            let claimSection = s.claimerName ?\n                <>{unclaim}</> :\n                <button className='btn btn-outline-success w-100'\n                        onClick={() => claimPresentClick(s.id)}>Claim</button>;\n\n            let classes = `mt-1 ml-0 mr-0 row ${claimed ? 'claimed' : ''}`;\n            return (\n                <tr key={s.id} className={classes}>\n                    <td className='col-8 col-md-10' cypress-name={`${s.id}-description`}>\n                        <Linkify>{s.description} {claimerText}</Linkify></td>\n                    <td className='col-4 col-md-2 text-right' cypress-name={`${s.id}-buttons`}>{claimSection}</td>\n                </tr>\n            )\n        });\n    }\n    \n    return (\n        <div className='wishlistSummaryItem mb-3' key={`${props.wishlistPerson.email}`}>\n            <div>\n                <span className='d-inline-block col-12 text-center'>\n                    {props.wishlistPerson.name}\n                    <span className='emailDetails'> ({props.wishlistPerson.email})</span>\n                </span>\n            </div>\n            <table className='table'>\n                {getPresentIdeas()}\n            </table>\n        </div>\n    )\n}","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistPersonRow.tsx",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":7,"column":17,"nodeType":"91","messageId":"92","endLine":7,"endColumn":28},{"ruleId":"89","severity":1,"message":"93","line":14,"column":12,"nodeType":"91","messageId":"92","endLine":14,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":25,"column":8,"nodeType":"96","endLine":25,"endColumn":34,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":90,"column":13,"nodeType":"100","endLine":90,"endColumn":16},{"ruleId":"89","severity":1,"message":"101","line":3,"column":9,"nodeType":"91","messageId":"92","endLine":3,"endColumn":23},{"ruleId":"94","severity":1,"message":"102","line":37,"column":9,"nodeType":"96","endLine":37,"endColumn":23,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"104","line":47,"column":10,"nodeType":"91","messageId":"92","endLine":47,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":150,"column":46,"nodeType":"107","messageId":"108","endLine":150,"endColumn":51},{"ruleId":"105","severity":1,"message":"106","line":153,"column":49,"nodeType":"107","messageId":"108","endLine":153,"endColumn":54},{"ruleId":"89","severity":1,"message":"101","line":1,"column":9,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"89","severity":1,"message":"101","line":3,"column":9,"nodeType":"91","messageId":"92","endLine":3,"endColumn":23},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'ModalDialog' is defined but never used.","Identifier","unusedVar","'creating' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadWishListSummaries' and 'login.Email'. Either include them or remove the dependency array.","ArrayExpression",["111"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'WishlistClient' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["112"],"'addPersonButtonShouldBeDisabled' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [loadWishListSummaries, login.Email, wishlistSummaries.length]",{"range":"117","text":"118"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"119","text":"120"},[1042,1068],"[loadWishListSummaries, login.Email, wishlistSummaries.length]",[1548,1562],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]