[{"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js":"1","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx":"2","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/HelloWorld.tsx":"3","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx":"4","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Counter.tsx":"5","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx":"6","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/FetchData.tsx":"7","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx":"8","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx":"9","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts":"10","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx":"11","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts":"12","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx":"13","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useGetLogin.ts":"14"},{"size":4013,"mtime":1609345184850,"results":"15","hashOfConfig":"16"},{"size":1290,"mtime":1610406750341,"results":"17","hashOfConfig":"16"},{"size":1720,"mtime":1609594894039,"results":"18","hashOfConfig":"16"},{"size":537,"mtime":1609609774645,"results":"19","hashOfConfig":"16"},{"size":791,"mtime":1609609356741,"results":"20","hashOfConfig":"16"},{"size":355,"mtime":1609345184842,"results":"21","hashOfConfig":"16"},{"size":1565,"mtime":1609610983477,"results":"22","hashOfConfig":"16"},{"size":1383,"mtime":1609633918480,"results":"23","hashOfConfig":"16"},{"size":2750,"mtime":1610489302826,"results":"24","hashOfConfig":"16"},{"size":15221,"mtime":1610491554109,"results":"25","hashOfConfig":"16"},{"size":3969,"mtime":1610492014462,"results":"26","hashOfConfig":"16"},{"size":352,"mtime":1610299894310,"results":"27","hashOfConfig":"16"},{"size":800,"mtime":1610407064778,"results":"28","hashOfConfig":"16"},{"size":141,"mtime":1610488977975,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"16c9n8r",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js",[],["62","63","64"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx",[],["65","66","67"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/HelloWorld.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Counter.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/FetchData.tsx",["68"],"import React, { Component } from 'react';\nimport { WeatherForecastClient, WeatherForecast } from '../nswag/api.generated';\n\nexport class FetchData extends React.Component<any, any> {\n  static displayName = FetchData.name;\n\n  constructor(props : any) {\n    super(props);\n    this.state = { forecasts: [], loading: true };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n\n  static renderForecastsTable(forecasts : WeatherForecast[]) {\n    return (\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Temp. (C)</th>\n            <th>Temp. (F)</th>\n            <th>Summary</th>\n          </tr>\n        </thead>\n        <tbody>\n          {forecasts.map(forecast =>\n            <tr key={forecast.date.toString()}>\n              <td>{forecast.date}</td>\n              <td>{forecast.temperatureC}</td>\n              <td>{forecast.temperatureF}</td>\n              <td>{forecast.summary}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    let contents = this.state.loading\n      ? <p><em>Loading...</em></p>\n      : FetchData.renderForecastsTable(this.state.forecasts);\n\n    return (\n      <div>\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\n        <p>This component demonstrates fetching data from the server.</p>\n        {contents}\n      </div>\n    );\n  }\n\n  async populateWeatherData() {\n    const data = await new WeatherForecastClient().get();\n    this.setState({ forecasts: data, loading: false });\n  }\n}\n","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx",["69","70","71","72"],"import React, {ChangeEvent, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {WishlistClient, WishlistModel, WishlistSummaryModel} from \"../../nswag/api.generated\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport './WishlistSummary.css';\nimport { useGetLogin } from \"../useGetLogin\";\n\ninterface WishlishHomepageProps{\n    wishlistClient: WishlistClient;\n}\n\nexport const WishlistHomepage: React.FC<WishlishHomepageProps> = (props) => {\n    const [creating, setCreating] = useState(false);\n    const [nameOfNewWishlist, setNameOfNewWishlist] = useState(\"\");\n    const [wishlistSummaries, setWishlistSummaries] = useState([] as WishlistSummaryModel[]);\n    const history = useHistory();\n    const login = useGetLogin();\n    \n    useEffect(() => {\n        loadWishListSummaries(login);\n    }, [wishlistSummaries.length]);\n\n    let onClickCancel = () => {\n        setCreating(false);\n        setNameOfNewWishlist(\"\");\n    }\n    \n    let onClickCreate = async () => {\n        let newWishlist = await props.wishlistClient.create(nameOfNewWishlist, login);\n        setCreating(false);\n        history.push(\"/wishlist/\" + newWishlist.id);\n    }\n\n    let handleInputChange = (event : ChangeEvent<HTMLInputElement>) => {\n        setNameOfNewWishlist(event.target.value);\n    }\n    \n    let loadWishListSummaries = async (email : string) => {\n        var summaries = await props.wishlistClient.getSummaries(email);\n        setWishlistSummaries(summaries);\n    }\n    \n    let onClickAddWishlist = () => {\n        setCreating(true);\n    }\n    \n    let createButtons;\n    if (!creating) {\n        createButtons = <div onClick={onClickAddWishlist} className='newItem wishlistSummaryItem' cypress-name='CreateNewWishlist'>...create new wishlist...</div>\n    }\n    else {\n        createButtons = <div className='newItem wishlistSummaryItem'>\n            <input type=\"text\" value={nameOfNewWishlist} onChange={handleInputChange} placeholder='Name of wishlist...' cypress-name='NameOfWishlist'></input> \n            <button onClick={onClickCreate} className='ml-2 btn btn-success' cypress-name='Create'>Create</button>\n            <button onClick={onClickCancel} className='ml-2 btn btn-dark' cypress-name='Cancel'>Cancel</button>\n        </div>\n    }\n\n    let summaries =\n        <div className='wishlistSummaries'>\n            {\n                wishlistSummaries.map(s =>\n                        <Link to={`wishlist/${s.id}`}> <div key={s.name} className='wishlistSummaryItem'>{s.name}</div></Link>)\n            }\n            <a>\n                {createButtons}\n            </a>\n        </div>\n\n    return (\n        <div>\n            <h1>Your Wishlists - {login}</h1>\n            { summaries }\n        </div>\n    );\n}","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx",["73","74"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useGetLogin.ts",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":3,"column":25,"nodeType":"84","messageId":"85","endLine":3,"endColumn":38},{"ruleId":"82","severity":1,"message":"87","line":4,"column":16,"nodeType":"84","messageId":"85","endLine":4,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":21,"column":8,"nodeType":"90","endLine":21,"endColumn":34,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":65,"column":13,"nodeType":"94","endLine":65,"endColumn":16},{"ruleId":"88","severity":1,"message":"95","line":35,"column":9,"nodeType":"90","endLine":35,"endColumn":23,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"93","line":71,"column":13,"nodeType":"94","endLine":71,"endColumn":16},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'WishlistModel' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadWishListSummaries' and 'login'. Either include them or remove the dependency array.","ArrayExpression",["99"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [loadWishListSummaries, login, wishlistSummaries.length]",{"range":"105","text":"106"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"107","text":"108"},[840,866],"[loadWishListSummaries, login, wishlistSummaries.length]",[1179,1193],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]