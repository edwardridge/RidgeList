[{"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx":"1","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js":"2","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx":"3","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts":"4","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts":"5","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx":"6","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx":"7","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx":"8","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Logout.tsx":"9","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx":"10","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useLogin.ts":"11","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx":"12","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/useWishlistClient.tsx":"13","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/OtherPersonWishlistRow.tsx":"14","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistPersonRow.tsx":"15"},{"size":537,"mtime":1609609774645,"results":"16","hashOfConfig":"17"},{"size":4013,"mtime":1609345184850,"results":"18","hashOfConfig":"17"},{"size":1063,"mtime":1610905123636,"results":"19","hashOfConfig":"17"},{"size":22430,"mtime":1612043799470,"results":"20","hashOfConfig":"17"},{"size":352,"mtime":1610299894310,"results":"21","hashOfConfig":"17"},{"size":355,"mtime":1609345184842,"results":"22","hashOfConfig":"17"},{"size":4010,"mtime":1612099677767,"results":"23","hashOfConfig":"17"},{"size":7308,"mtime":1612128306364,"results":"24","hashOfConfig":"17"},{"size":262,"mtime":1610904925612,"results":"25","hashOfConfig":"17"},{"size":1675,"mtime":1612095680849,"results":"26","hashOfConfig":"17"},{"size":1294,"mtime":1610905080553,"results":"27","hashOfConfig":"17"},{"size":1540,"mtime":1610544692379,"results":"28","hashOfConfig":"17"},{"size":134,"mtime":1611733504315,"results":"29","hashOfConfig":"17"},{"size":2936,"mtime":1612128189857,"results":"30","hashOfConfig":"17"},{"size":4103,"mtime":1612128368883,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16c9n8r",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/index.tsx",[],["65","66","67"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/registerServiceWorker.js",[],["68","69","70"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/App.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/nswag/api.generated.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/IWishlistRepository.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Layout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistHomepage.tsx",["71","72","73","74"],"import React, {ChangeEvent, useState, useEffect, useRef} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {WishlistClient, WishlistSummaryModel} from \"../../nswag/api.generated\";\nimport { Link } from \"react-router-dom\";\nimport './WishlistSummary.css';\nimport { useGetLogin } from \"../useLogin\";\nimport { Modal, ModalDialog, Button } from \"react-bootstrap\"\n\ninterface WishlishHomepageProps{\n    wishlistClient: WishlistClient;\n}\n\nexport const WishlistHomepage = (props : WishlishHomepageProps) => {\n    const [creating, setCreating] = useState(false);\n    const [nameOfNewWishlist, setNameOfNewWishlist] = useState(\"\");\n    const [creatorIsGiftee, setCreatorIsGiftee] = useState(true);\n    const [wishlistSummaries, setWishlistSummaries] = useState([] as WishlistSummaryModel[]);\n    const history = useHistory();\n    const login = useGetLogin(false);\n    const [show, setShow] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        loadWishListSummaries(login.Email);\n    }, [wishlistSummaries.length]);\n\n    let onClickCancel = () => {\n        setNameOfNewWishlist(\"\");\n        setShow(false);\n    }\n    \n    let onClickCreate = async () => {\n        let newWishlist = await props.wishlistClient.create(nameOfNewWishlist, login.Email, login.Name, creatorIsGiftee);\n        setCreating(false);\n        history.push(\"/wishlist/\" + newWishlist.id);\n        setShow(false);\n    }\n\n    let handleInputChange = (event : ChangeEvent<HTMLInputElement>) => {\n        setNameOfNewWishlist(event.target.value);\n    }\n    \n    let loadWishListSummaries = async (email : string) => {\n        var summaries = await props.wishlistClient.getSummaries(email);\n        setWishlistSummaries(summaries);\n    }\n    \n    let onClickAddWishlist = () => {\n        setShow(true);\n        setTimeout(() => {inputRef?.current?.focus();},0);\n    }\n    \n    let createButtons = <>\n        <Button className='w-100' size='lg' variant=\"outline-primary\" cypress-name='CreateNewWishlist' onClick={onClickAddWishlist}>\n            Create New...\n        </Button>\n\n        <Modal show={show} onHide={onClickCancel}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create New Wishlist</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className='input-group input-group-lg'>\n                    <input ref={inputRef} autoFocus={true} type=\"text\" className='w-100 form-control' value={nameOfNewWishlist} onChange={handleInputChange} placeholder='Name of wishlist...' cypress-name='NameOfWishlist'></input>\n                    <div className=\"form-check mt-3\">\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={creatorIsGiftee} id=\"areTheyGiftee\" onChange={(e) => {setCreatorIsGiftee(e.target.checked)}}/>\n                        <label className=\"form-check-label\" htmlFor=\"areTheyGiftee\">\n                            Are you receiving gifts?\n                        </label>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button block={true} variant=\"primary\" size='lg' cypress-name='Create' onClick={onClickCreate}>\n                    Create\n                </Button>\n                <Button block={true} variant=\"secondary\" size='lg' onClick={onClickCancel}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    </>\n\n    let summaries =\n        <div className='wishlistSummaries'>\n            {\n                wishlistSummaries.map(s =>\n                    <Link key={s.name} to={`wishlist/${s.id}`}> <div key={s.name} className='wishlistSummaryItem'>{s.name}</div></Link>)\n            }\n            <a>\n                \n            </a>\n        </div>\n\n    return (\n        <div>\n            <h2 className='text-center'>Your Wishlists</h2>\n\n            <div>\n                {createButtons}\n            </div>\n            { summaries }\n        </div>\n    );\n}","/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/Wishlist.tsx",["75","76","77","78","79"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Logout.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Login/Login.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/useLogin.ts",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/NavMenu.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/useWishlistClient.tsx",[],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/OtherPersonWishlistRow.tsx",["80"],"/Users/edwardridge/RiderProjects/RidgeList/RidgeList.FrontEnd/ClientApp/src/components/Wishlist/WishlistPersonRow.tsx",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":7,"column":17,"nodeType":"91","messageId":"92","endLine":7,"endColumn":28},{"ruleId":"89","severity":1,"message":"93","line":14,"column":12,"nodeType":"91","messageId":"92","endLine":14,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":25,"column":8,"nodeType":"96","endLine":25,"endColumn":34,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":90,"column":13,"nodeType":"100","endLine":90,"endColumn":16},{"ruleId":"89","severity":1,"message":"101","line":3,"column":9,"nodeType":"91","messageId":"92","endLine":3,"endColumn":23},{"ruleId":"94","severity":1,"message":"102","line":37,"column":9,"nodeType":"96","endLine":37,"endColumn":23,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"104","line":47,"column":10,"nodeType":"91","messageId":"92","endLine":47,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":149,"column":46,"nodeType":"107","messageId":"108","endLine":149,"endColumn":51},{"ruleId":"105","severity":1,"message":"106","line":152,"column":49,"nodeType":"107","messageId":"108","endLine":152,"endColumn":54},{"ruleId":"89","severity":1,"message":"101","line":1,"column":9,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"89","severity":1,"message":"101","line":3,"column":9,"nodeType":"91","messageId":"92","endLine":3,"endColumn":23},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"jsx-a11y/accessible-emoji",[],[],"@typescript-eslint/no-unused-vars","'ModalDialog' is defined but never used.","Identifier","unusedVar","'creating' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadWishListSummaries' and 'login.Email'. Either include them or remove the dependency array.","ArrayExpression",["111"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'WishlistClient' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'props.wishlistRepository'. Either include them or remove the dependency array.",["112"],"'addPersonButtonShouldBeDisabled' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [loadWishListSummaries, login.Email, wishlistSummaries.length]",{"range":"117","text":"118"},"Update the dependencies array to be: [props.match.params.id, props.wishlistRepository, wishlist.id]",{"range":"119","text":"120"},[1042,1068],"[loadWishListSummaries, login.Email, wishlistSummaries.length]",[1548,1562],"[props.match.params.id, props.wishlistRepository, wishlist.id]"]